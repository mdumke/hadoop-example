---

- hosts: hadoop
  become: yes

  pre_tasks:
    - name: force dns
      replace:
        path: /etc/resolv.conf
        regexp: '^nameserver 127.0.0.53'
        replace: 'nameserver 8.8.8.8'
    - name: system update
      apt:
        update_cache: yes
        cache_valid_time: 3600

  tasks:
    - name: create group hadoop
      group: name=hadoop state=present

    - name: create user hduser
      user:
        name: hduser
        group: hadoop
        create_home: yes
        shell: /bin/bash
        state: present
        password: $1$SomeSalt$AMNSBufwlUERGdLU31xgi0 #password: hduser

    - name: get java8
      apt:
        name: openjdk-8-jdk
        state: present

    - name: Check if hadoop binaries are downloaded
      stat:
        path: /usr/local/hadoop-3.2.1.tar.gz
      register: hadoop_stat

    - name: Download Hadoop
      when: hadoop_stat.stat.exists == False 
      get_url:
        url: http://apache.lauf-forum.at/hadoop/common/hadoop-3.2.1/hadoop-3.2.1.tar.gz
        dest: /usr/local/hadoop-3.2.1.tar.gz

    - name: copy binaries
      when: hadoop_stat.stat.exists == False 
      unarchive:
        remote_src: yes
        src: /usr/local/hadoop-3.2.1.tar.gz
        dest: /usr/local

    - name: rename for easier access
      when: hadoop_stat.stat.exists == False 
      shell: mv /usr/local/hadoop-3.2.1 /usr/local/hadoop

    - name: assign hadoop to hduser
      file:
        dest: /usr/local/hadoop
        owner: hduser
        group: hadoop
        recurse: yes

    - name: prepare hduser's environment
      blockinfile:
        dest: /home/hduser/.bashrc
        block: |
          # Java installation
          export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/

          # Hadoop installation
          export HADOOP_HOME=/usr/local/hadoop
          export PATH=$PATH:$HADOOP_HOME/bin
          export PATH=$PATH:$HADOOP_HOME/sbin
          export HADOOP_COMMON_HOME=$HADOOP_HOME
          export HADOOP_HDFS_HOME=$HADOOP_HOME
          export HADOOP_YARN_HOME=$HADOOP_HOME
          export HADOOP_MAPRED_HOME=$HADOOP_HOME

          # silence annoying stdout info
          export HADOOP_LOGLEVEL=WARN

          # start agent
          eval `ssh-agent` > /dev/null
          ssh-add ~/.ssh/hduser_key 2> /dev/null

          # configure pdsh
          export PDSH_RCMD_TYPE=ssh

    - name: copy config files
      copy:
        src: ./config/
        dest: /usr/local/hadoop/etc/hadoop

    - name: let hadoop know about java
      lineinfile:
        dest: /usr/local/hadoop/etc/hadoop/hadoop-env.sh
        line: export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
        insertafter: '^# export JAVA_HOME=$'

    - name: create working directories
      file:
        dest: /usr/local/hadoop/{{ item }}
        state: directory
        owner: hduser
        group: hadoop
        mode: '0755'
      with_items:
        - namenode
        - datanode
        - tmp

    - name: copy ssh keys
      copy:
        src: ./secrets/
        dest: /home/hduser/.ssh

    - name: grant hduser access
      authorized_key:
        user: hduser
        state: present
        key: "{{ lookup('file', './secrets/hduser_key.pub') }}"

    - name: make ssh files owned by user
      file:
        dest: /home/hduser/.ssh
        owner: hduser
        group: hadoop
        recurse: yes

    - name: protect private key
      file:
        path: /home/hduser/.ssh/hduser_key
        mode: a-rwx,u+rw

    - name: get recommended pdsh
      apt:
        name: pdsh
        state: present

    - name: get convenience programs
      apt:
        name: ['tree', 'python-pip', 'python-setuptools']
        state: present

    - name: update python env
      pip:
        name: faker

    - name: bring python script for posts creation
      copy:
        src: scripts/
        dest: /home/hduser
        owner: hduser
        group: hadoop
